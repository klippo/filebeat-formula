{% from "filebeat/map.jinja" import filebeat with context %}
filebeat.prospectors:
{%- for log_path in filebeat.log_paths %}
- input_type: {{ log_path.get('input_type', 'log') }}
  {%- for key, val in log_path.items() %}
  {%- if 'paths' in key %}
  paths:
    {%- for path in val %}
    - {{ path }}
    {%- endfor %}
    {%- else %}
  {{ key }}: {{ val }}
  {%- endif %}
  {%- endfor %}
{%- endfor %}

{%- set redis = filebeat.get('redis', {}) %}
{%- if redis.get('enabled', False) %}
output.redis:
{%- for key, val in redis.items() if not key == 'enabled' %}
  {{ key }}: {{ val }}
{%- endfor %}
{%- endif %}

{%- set elasticsearch = filebeat.get('elasticsearch', {}) %}
{%- if elasticsearch.get('enabled', False) %}
output.elasticsearch:
{%- for key, val in elasticsearch.items() if not key == 'enabled' %}
  {{ key }}: {{ val }}
{%- endfor %}
{%- endif %}

{%- set logstash = filebeat.get('logstash', {}) %}
{%- if logstash.get('enabled', False) %}
output.logstash:
{%- for key, val in logstash.items() if not key == 'enabled' %}
  {{ key }}: {{ val }}
{%- endfor %}
{%- endif %}

{%- set logging = filebeat.get('logging', {}) %}
{%- if logging.get('enabled', False) %}
logging.to_files: true
logging.files:
{%- for key, val in logging.items() if not key == 'enabled' %}
  {{ key }}: {{ val }}
{%- endfor %}
{%- endif %}
